package GUI;

import Database.Database;
import GoogleSearch.CustomSearch;
import APACHE_LUCENE.LuceneTester;

import java.awt.Color;
import java.awt.Desktop;
import java.awt.event.ItemEvent;
import java.io.IOException;
import java.net.URI;
import java.net.URISyntaxException;
import VideoFiltering.VideoFiltering;
import java.awt.BorderLayout;
import java.awt.Dimension;


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Box;
import javax.swing.BoxLayout;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JSeparator;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.SwingConstants;
import org.apache.lucene.queryParser.ParseException;

/**
 *
 * @author A.Y
 */
public final class UserInterface extends javax.swing.JFrame {

    Database database;
    VideoFiltering filtering;
    LuceneTester tester;

    CustomSearch cs;

    /* for adding video info from database*/
    ArrayList<String> dbIds;
    ArrayList<String> dbTitles;
    ArrayList<Integer> dbViews;
    ArrayList<Integer> dbLikes;
    ArrayList<Integer> dbDislikes;
    ArrayList<String> dbDuration;
    ArrayList<String> dbVideoYear;
    ArrayList<String> dbVideoPng;
    ArrayList<String> dbVideoDescription;

    ArrayList<String> urls;

    int index1;
    String user_for_notification;

    /**
     * Creates new form UserInterface
     *
     * @throws java.io.IOException
     * @throws java.sql.SQLException
     * @throws java.lang.ClassNotFoundException
     * @throws java.lang.InstantiationException
     * @throws java.lang.IllegalAccessException
     */
    public UserInterface() throws IOException, SQLException, ClassNotFoundException, InstantiationException, IllegalAccessException {

        initComponents();
        getAllDucumentInDatabase();

    }

    /**
     * This method is called from within the constructor to initialise the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        welcomeScreen = new javax.swing.JPanel();
        Access_Create = new javax.swing.JTabbedPane();
        logIN = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        Status2 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JPasswordField();
        newAccountPanel = new javax.swing.JPanel();
        username = new javax.swing.JTextField();
        name = new javax.swing.JTextField();
        surname = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        Status = new javax.swing.JLabel();
        password = new javax.swing.JPasswordField();
        jLabel11 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        mainScreen = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        barPanel = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        process = new javax.swing.JLabel();
        bar = new javax.swing.JProgressBar();
        jPanel4 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        logOut = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        newMessages = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        openNotification = new javax.swing.JToggleButton();
        status = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jButton4 = new javax.swing.JButton();
        communicateButton = new javax.swing.JButton();
        quizeButton1 = new javax.swing.JButton();
        support = new javax.swing.JButton();
        homeScreenButton = new javax.swing.JButton();
        QuizCategory = new javax.swing.JPanel();
        QuizCategory.setVisible(false);
        jComboBox3 = new javax.swing.JComboBox();
        jLabel21 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jLabel22 = new javax.swing.JLabel();
        categoryPanel = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        category = new javax.swing.JComboBox();
        jLabel13 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        searchPanel = new javax.swing.JPanel();
        query = new javax.swing.JTextField();
        Search = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jLabel9 = new javax.swing.JLabel();
        jLabel9.setVisible(false);
        jComboBox1 = new javax.swing.JComboBox();
        jComboBox1.setVisible(false);
        jLabel1 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox();
        jComboBox2.setVisible(false);
        jCheckBox2 = new javax.swing.JCheckBox();
        jCheckBox2.setVisible(false);
        searchVideoPanel = new javax.swing.JTabbedPane();
        searchVideoPanel.setVisible(false);
        urlsScroll = new javax.swing.JScrollPane();
        quizePanel = new javax.swing.JPanel();
        quizePanel.setVisible(false);
        jScrollPane6 = new javax.swing.JScrollPane();
        jButton3 = new javax.swing.JButton();
        jButton3.setVisible(false);
        notificationScroll = new javax.swing.JScrollPane();
        chatPanel = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        question_button = new javax.swing.JButton();
        back_button = new javax.swing.JButton();
        answer_button = new javax.swing.JButton();
        answer_button.setVisible(false);
        jScrollPane4 = new javax.swing.JScrollPane();
        question_text = new javax.swing.JTextArea();
        jScrollPane5 = new javax.swing.JScrollPane();
        answer_text = new javax.swing.JTextArea();
        answer_text.setVisible(false);
        ChatStatus = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane9 = new javax.swing.JScrollPane();
        questionView = new javax.swing.JTextArea();
        supportPanel = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jToggleButton1 = new javax.swing.JToggleButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane10 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jToggleButton2 = new javax.swing.JToggleButton();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane11 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        wallpaper = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBounds(new java.awt.Rectangle(0, 0, 0, 0));
        setMinimumSize(new java.awt.Dimension(1360, 750));
        setResizable(false);
        getContentPane().setLayout(null);

        welcomeScreen.setMinimumSize(new java.awt.Dimension(1360, 750));
        welcomeScreen.setLayout(null);

        Access_Create.setBackground(new java.awt.Color(255, 255, 255));
        //Access_Create.setLocation(null);
        Access_Create.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));
        Access_Create.setMaximumSize(new java.awt.Dimension(1240, 600));
        Access_Create.setMinimumSize(new java.awt.Dimension(1240, 600));
        Access_Create.setPreferredSize(new java.awt.Dimension(1240, 600));

        logIN.setBackground(new java.awt.Color(102, 153, 255));
        logIN.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        logIN.setMaximumSize(new java.awt.Dimension(480, 240));
        logIN.setMinimumSize(new java.awt.Dimension(480, 240));
        logIN.setPreferredSize(new java.awt.Dimension(480, 240));
        logIN.setLayout(null);

        jLabel6.setText("Username:");
        logIN.add(jLabel6);
        jLabel6.setBounds(350, 100, 70, 30);

        jLabel7.setText("Password:");
        logIN.add(jLabel7);
        jLabel7.setBounds(350, 130, 80, 30);
        logIN.add(jTextField1);
        jTextField1.setBounds(420, 100, 160, 30);

        jButton2.setText("OK");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        logIN.add(jButton2);
        jButton2.setBounds(420, 180, 160, 29);
        logIN.add(Status2);
        Status2.setBounds(10, 280, 180, 40);
        logIN.add(jTextField2);
        jTextField2.setBounds(420, 130, 160, 30);

        Access_Create.addTab("Log In", logIN);

        newAccountPanel.setBackground(new java.awt.Color(102, 153, 255));
        newAccountPanel.setMaximumSize(new java.awt.Dimension(450, 350));
        newAccountPanel.setMinimumSize(new java.awt.Dimension(450, 350));
        newAccountPanel.setPreferredSize(new java.awt.Dimension(450, 350));
        newAccountPanel.setLayout(null);
        newAccountPanel.add(username);
        username.setBounds(430, 140, 130, 30);
        newAccountPanel.add(name);
        name.setBounds(430, 80, 130, 30);
        newAccountPanel.add(surname);
        surname.setBounds(430, 110, 130, 30);

        jLabel2.setText("Name:");
        newAccountPanel.add(jLabel2);
        jLabel2.setBounds(380, 80, 40, 30);

        jLabel3.setText("Surname:");
        newAccountPanel.add(jLabel3);
        jLabel3.setBounds(370, 110, 58, 30);

        jLabel4.setText("Username:");
        newAccountPanel.add(jLabel4);
        jLabel4.setBounds(360, 140, 190, 30);

        jLabel5.setText("Password:");
        newAccountPanel.add(jLabel5);
        jLabel5.setBounds(360, 170, 80, 30);

        jButton1.setText("Create");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        newAccountPanel.add(jButton1);
        jButton1.setBounds(430, 210, 130, 29);
        newAccountPanel.add(Status);
        Status.setBounds(0, 280, 480, 40);
        newAccountPanel.add(password);
        password.setBounds(430, 170, 130, 28);

        Access_Create.addTab("Sign Up", newAccountPanel);

        welcomeScreen.add(Access_Create);
        Access_Create.setBounds(190, 160, 980, 370);

        jLabel11.setFont(new java.awt.Font("Chalkduster", 0, 24)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Welcome to Personalised JAVA E-Learning System");
        welcomeScreen.add(jLabel11);
        jLabel11.setBounds(340, 80, 730, 40);

        jLabel20.setIcon(new javax.swing.ImageIcon("/Users/A.Y/NetBeansProjects/E-Learling-System/src/main/java/Images/code-wallpaper-2 (1) 2.jpg")); // NOI18N
        welcomeScreen.add(jLabel20);
        jLabel20.setBounds(-7, -4, 1370, 740);

        getContentPane().add(welcomeScreen);
        welcomeScreen.setBounds(0, -1, 1360, 730);

        mainScreen.setMaximumSize(new java.awt.Dimension(1360, 730));
        mainScreen.setPreferredSize(new java.awt.Dimension(1360, 730));
        mainScreen.setRequestFocusEnabled(false);
        mainScreen.setLayout(null);
        mainScreen.setVisible(false);

        jLabel8.setFont(new java.awt.Font("Chalkduster", 0, 25)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(51, 102, 255));
        jLabel8.setText("Personalised JAVA E-Learning System");
        mainScreen.add(jLabel8);
        jLabel8.setBounds(160, 670, 540, 50);

        barPanel.setBackground(new java.awt.Color(255, 255, 255));
        barPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 102, 255), 2));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.add(process);
        jPanel1.add(bar);

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        jLabel10.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jPanel4.add(jLabel10);

        logOut.setBackground(new java.awt.Color(255, 255, 255));
        logOut.setText("Log out");
        logOut.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 102, 255), 2));
        logOut.setOpaque(true);
        logOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logOutActionPerformed(evt);
            }
        });

        jPanel2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        jSeparator1.setBackground(new java.awt.Color(51, 51, 255));
        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        openNotification.setIcon(new javax.swing.ImageIcon("/Users/A.Y/NetBeansProjects/E-Learling-System/src/main/java/Images/arrowIcon.png")); // NOI18N
        openNotification.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openNotificationActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(newMessages, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(openNotification, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(newMessages, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(openNotification, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );

        status.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        status.setForeground(new java.awt.Color(51, 102, 255));

        barPanel.setVisible(false);

        javax.swing.GroupLayout barPanelLayout = new javax.swing.GroupLayout(barPanel);
        barPanel.setLayout(barPanelLayout);
        barPanelLayout.setHorizontalGroup(
            barPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, barPanelLayout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(71, 71, 71)
                .addComponent(status, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 395, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(logOut, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17))
        );
        barPanelLayout.setVerticalGroup(
            barPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, barPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(barPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, barPanelLayout.createSequentialGroup()
                        .addGroup(barPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(logOut))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(barPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(barPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(status, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );

        mainScreen.add(barPanel);
        barPanel.setBounds(0, 0, 1360, 40);

        jSeparator2.setBackground(new java.awt.Color(51, 102, 255));
        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);
        mainScreen.add(jSeparator2);
        jSeparator2.setBounds(150, 20, 20, 710);

        jButton4.setBackground(new java.awt.Color(255, 255, 255));
        jButton4.setIcon(new javax.swing.ImageIcon("/Users/A.Y/NetBeansProjects/E-Learling-System/src/main/java/Images/tutorialsIcon.png")); // NOI18N
        jButton4.setText("Search for JAVA");
        jButton4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 102, 255), 2));
        jButton4.setOpaque(true);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        mainScreen.add(jButton4);
        jButton4.setBounds(10, 120, 140, 50);

        communicateButton.setBackground(new java.awt.Color(255, 255, 255));
        communicateButton.setIcon(new javax.swing.ImageIcon("/Users/A.Y/NetBeansProjects/E-Learling-System/src/main/java/Images/discussionIcon.png")); // NOI18N
        communicateButton.setText("Discuss");
        communicateButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 102, 255), 2));
        communicateButton.setOpaque(true);
        communicateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                communicateButtonActionPerformed(evt);
            }
        });
        mainScreen.add(communicateButton);
        communicateButton.setBounds(10, 190, 140, 52);

        quizeButton1.setBackground(new java.awt.Color(255, 255, 255));
        quizeButton1.setIcon(new javax.swing.ImageIcon("/Users/A.Y/NetBeansProjects/E-Learling-System/src/main/java/Images/test-quiz.png")); // NOI18N
        quizeButton1.setText("Quizes");
        quizeButton1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 102, 255), 2));
        quizeButton1.setOpaque(true);
        quizeButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quizeButton1ActionPerformed(evt);
            }
        });
        mainScreen.add(quizeButton1);
        quizeButton1.setBounds(10, 260, 140, 50);

        support.setBackground(new java.awt.Color(255, 255, 255));
        support.setIcon(new javax.swing.ImageIcon("/Users/A.Y/NetBeansProjects/E-Learling-System/src/main/java/Images/icon (1).png")); // NOI18N
        support.setText("Support");
        support.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 255), 2));
        support.setOpaque(true);
        support.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supportActionPerformed(evt);
            }
        });
        mainScreen.add(support);
        support.setBounds(10, 330, 140, 50);

        homeScreenButton.setBackground(new java.awt.Color(255, 255, 255));
        homeScreenButton.setIcon(new javax.swing.ImageIcon("/Users/A.Y/NetBeansProjects/E-Learling-System/src/main/java/Images/homeIcon.png")); // NOI18N
        homeScreenButton.setText("Home Screen");
        homeScreenButton.setToolTipText("");
        homeScreenButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 255), 2));
        homeScreenButton.setContentAreaFilled(false);
        homeScreenButton.setOpaque(true);
        homeScreenButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeScreenButtonActionPerformed(evt);
            }
        });
        mainScreen.add(homeScreenButton);
        homeScreenButton.setBounds(10, 50, 140, 52);

        QuizCategory.setBackground(new java.awt.Color(255, 255, 255));

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Selections", "Loops", "Methods", "Objects - Classes", "Strings", "Single - Dimensional - Arrays", "Multidimensional - Arrays" }));

        jLabel21.setForeground(new java.awt.Color(51, 102, 255));
        jLabel21.setText("Catergoty:");

        jButton6.setText("Go");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jLabel22.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(51, 102, 255));
        jLabel22.setText("Select your category");

        javax.swing.GroupLayout QuizCategoryLayout = new javax.swing.GroupLayout(QuizCategory);
        QuizCategory.setLayout(QuizCategoryLayout);
        QuizCategoryLayout.setHorizontalGroup(
            QuizCategoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(QuizCategoryLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(QuizCategoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(QuizCategoryLayout.createSequentialGroup()
                        .addComponent(jLabel21)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(59, 59, 59))
            .addGroup(QuizCategoryLayout.createSequentialGroup()
                .addGap(106, 106, 106)
                .addComponent(jButton6)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        QuizCategoryLayout.setVerticalGroup(
            QuizCategoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(QuizCategoryLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(QuizCategoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21))
                .addGap(18, 18, 18)
                .addComponent(jButton6)
                .addContainerGap(10, Short.MAX_VALUE))
        );

        mainScreen.add(QuizCategory);
        QuizCategory.setBounds(610, 280, 280, 140);

        categoryPanel.setBackground(new java.awt.Color(255, 255, 255));

        jLabel12.setForeground(new java.awt.Color(51, 102, 255));
        jLabel12.setText("Category:");

        category.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Variables", "Objects & Classes", "Single-Dimensional Arrays", "Multidimensional Arrays", "Loops", "Other", " " }));

        jLabel13.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(0, 102, 255));
        jLabel13.setText("Select your category");

        jButton5.setText("Go");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        categoryPanel.setVisible(false);

        javax.swing.GroupLayout categoryPanelLayout = new javax.swing.GroupLayout(categoryPanel);
        categoryPanel.setLayout(categoryPanelLayout);
        categoryPanelLayout.setHorizontalGroup(
            categoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(categoryPanelLayout.createSequentialGroup()
                .addGroup(categoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(categoryPanelLayout.createSequentialGroup()
                        .addGap(101, 101, 101)
                        .addComponent(jButton5))
                    .addGroup(categoryPanelLayout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(category, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(categoryPanelLayout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(jLabel13)))
                .addContainerGap(37, Short.MAX_VALUE))
        );
        categoryPanelLayout.setVerticalGroup(
            categoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(categoryPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(categoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(category, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton5)
                .addContainerGap(8, Short.MAX_VALUE))
        );

        mainScreen.add(categoryPanel);
        categoryPanel.setBounds(610, 270, 280, 130);

        searchPanel.setBackground(new java.awt.Color(0, 255, 204));
        searchPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        searchPanel.setLayout(null);
        searchPanel.setVisible(false);

        query.setFont(new java.awt.Font("Lucida Grande", 0, 10)); // NOI18N
        query.setForeground(new java.awt.Color(51, 102, 255));
        query.setText("Search for JAVA content");
        query.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                queryFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                queryFocusLost(evt);
            }
        });
        searchPanel.add(query);
        query.setBounds(40, 0, 500, 40);

        Search.setIcon(new javax.swing.ImageIcon("/Users/A.Y/NetBeansProjects/E-Learling-System/src/main/java/Images/searchIcon.jpg")); // NOI18N
        Search.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SearchMouseClicked(evt);
            }
        });
        searchPanel.add(Search);
        Search.setBounds(10, 0, 30, 40);

        jCheckBox1.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jCheckBox1.setForeground(new java.awt.Color(0, 102, 255));
        jCheckBox1.setText("Turn Filter On");
        jCheckBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox1ItemStateChanged(evt);
            }
        });
        searchPanel.add(jCheckBox1);
        jCheckBox1.setBounds(540, -2, 135, 40);

        jLabel9.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(51, 102, 255));
        jLabel9.setText("Start from:");
        searchPanel.add(jLabel9);
        jLabel9.setBounds(690, 0, 70, 40);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "----", "2000", "2001", "2002", "2003", "2004", "2005", "2006", "2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017" }));
        searchPanel.add(jComboBox1);
        jComboBox1.setBounds(760, 7, 88, 30);

        jLabel1.setVisible(false);
        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 102, 255));
        jLabel1.setText("End from:");
        searchPanel.add(jLabel1);
        jLabel1.setBounds(850, 6, 65, 30);

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "----", "2017", "2016", "2015", "2014", "2013", "2012", "2011", "2010", "2009", "2008", "2007", "2006", "2005", "2004", "2003", "2002", "2001", "2000" }));
        searchPanel.add(jComboBox2);
        jComboBox2.setBounds(920, 7, 88, 30);

        jCheckBox2.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jCheckBox2.setForeground(new java.awt.Color(0, 102, 255));
        jCheckBox2.setText("Most viewed");
        searchPanel.add(jCheckBox2);
        jCheckBox2.setBounds(1020, 10, 116, 23);

        mainScreen.add(searchPanel);
        searchPanel.setBounds(180, 50, 1170, 40);

        searchVideoPanel.setBackground(new java.awt.Color(255, 255, 255));
        searchVideoPanel.setOpaque(true);

        VideoScrollPane.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 102, 255), 2, true));
        VideoScrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        VideoScrollPane.setToolTipText("");
        VideoScrollPane.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        VideoScrollPane.setMaximumSize(new java.awt.Dimension(760, 550));
        VideoScrollPane.setMinimumSize(new java.awt.Dimension(760, 550));
        VideoScrollPane.setName(""); // NOI18N
        VideoScrollPane.setPreferredSize(new java.awt.Dimension(760, 550));
        VideoScrollPane.setViewportView(null);
        searchVideoPanel.addTab("Videos", VideoScrollPane);

        urlsScroll.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 102, 255), 2, true));
        urlsScroll.setViewportView(null);
        searchVideoPanel.addTab("URL's", urlsScroll);

        mainScreen.add(searchVideoPanel);
        searchVideoPanel.setBounds(180, 100, 1170, 580);

        quizePanel.setBackground(new java.awt.Color(255, 255, 255));
        quizePanel.setLayout(null);
        quizePanel.add(jScrollPane6);
        jScrollPane6.setBounds(10, 50, 1150, 500);

        jButton3.setText("Submit!");
        quizePanel.add(jButton3);
        jButton3.setBounds(10, 10, 110, 29);

        mainScreen.add(quizePanel);
        quizePanel.setBounds(180, 70, 1170, 560);

        notificationScroll.setVisible(false);

        mainScreen.add(notificationScroll);
        notificationScroll.setBounds(200, 30, 190, 210);

        chatPanel.setBackground(new java.awt.Color(255, 255, 255));
        chatPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        chatPanel.setMaximumSize(new java.awt.Dimension(1170, 560));
        chatPanel.setMinimumSize(new java.awt.Dimension(1170, 560));
        chatPanel.setPreferredSize(new java.awt.Dimension(1170, 560));
        chatPanel.setLayout(null);

        jScrollPane3.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane3.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        jScrollPane3.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        chatPanel.add(jScrollPane3);
        jScrollPane3.setBounds(470, 40, 700, 520);

        question_button.setText("Add Question");
        question_button.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 51, 51), 2));
        question_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                question_buttonActionPerformed(evt);
            }
        });
        chatPanel.add(question_button);
        question_button.setBounds(10, 10, 132, 30);

        back_button.setText("Back");
        chatPanel.add(back_button);
        back_button.setBounds(470, 10, 90, 29);

        answer_button.setText("Add Answer");
        answer_button.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 255), 2));
        answer_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                answer_buttonActionPerformed(evt);
            }
        });
        chatPanel.add(answer_button);
        answer_button.setBounds(10, 10, 132, 30);

        jScrollPane4.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        question_text.setColumns(20);
        question_text.setRows(5);
        question_text.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 51), 2), "Enter a question"));
        jScrollPane4.setViewportView(question_text);

        chatPanel.add(jScrollPane4);
        jScrollPane4.setBounds(10, 50, 440, 120);

        answer_text.setColumns(20);
        answer_text.setRows(5);
        answer_text.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 255), 2), "Enter an answer"));
        jScrollPane5.setViewportView(answer_text);

        chatPanel.add(jScrollPane5);
        jScrollPane5.setBounds(10, 50, 440, 120);
        chatPanel.add(ChatStatus);
        ChatStatus.setBounds(10, 540, 250, 28);

        jPanel5.setBackground(new java.awt.Color(204, 204, 204));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Question"));

        questionView.setEditable(false);
        questionView.setColumns(20);
        questionView.setLineWrap(true);
        questionView.setRows(5);
        jScrollPane9.setViewportView(questionView);

        jPanel5.setVisible(false);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane9, javax.swing.GroupLayout.DEFAULT_SIZE, 416, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane9, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE)
        );

        chatPanel.add(jPanel5);
        jPanel5.setBounds(10, 310, 440, 220);

        chatPanel.setVisible(false);

        mainScreen.add(chatPanel);
        chatPanel.setBounds(170, 80, 1180, 580);

        supportPanel.setBackground(new java.awt.Color(153, 153, 153));

        jLabel14.setIcon(new javax.swing.ImageIcon("/Users/A.Y/NetBeansProjects/E-Learling-System/src/main/java/Images/stackOverflowIcon.png")); // NOI18N
        jLabel14.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel14MouseClicked(evt);
            }
        });

        jLabel15.setIcon(new javax.swing.ImageIcon("/Users/A.Y/NetBeansProjects/E-Learling-System/src/main/java/Images/githubIcon.png")); // NOI18N
        jLabel15.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel15MouseClicked(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("Useful websites");

        jLabel17.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("Platforms");

        jLabel18.setIcon(new javax.swing.ImageIcon("/Users/A.Y/NetBeansProjects/E-Learling-System/src/main/java/Images/netbeans-icon.jpg")); // NOI18N
        jLabel18.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel18MouseClicked(evt);
            }
        });

        jLabel19.setIcon(new javax.swing.ImageIcon("/Users/A.Y/NetBeansProjects/E-Learling-System/src/main/java/Images/eclipseIcon.jpg")); // NOI18N
        jLabel19.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel19MouseClicked(evt);
            }
        });

        jSeparator3.setForeground(new java.awt.Color(0, 102, 255));
        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jToggleButton1.setIcon(new javax.swing.ImageIcon("/Users/A.Y/NetBeansProjects/E-Learling-System/src/main/java/Images/informationIcon.png")); // NOI18N
        jToggleButton1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jToggleButton1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jToggleButton1FocusLost(evt);
            }
        });

        jPanel3.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));

        jTextArea1.setColumns(20);
        jTextArea1.setForeground(new java.awt.Color(51, 102, 255));
        jTextArea1.setRows(5);
        jTextArea1.setText("Check out these websites, they can provide you with\nrelevant examples as well as projects from other user\naround the world!!");
        jScrollPane10.setViewportView(jTextArea1);

        jPanel3.setVisible(false);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane10, javax.swing.GroupLayout.DEFAULT_SIZE, 348, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane10, javax.swing.GroupLayout.DEFAULT_SIZE, 193, Short.MAX_VALUE)
                .addContainerGap())
        );

        jToggleButton2.setIcon(new javax.swing.ImageIcon("/Users/A.Y/NetBeansProjects/E-Learling-System/src/main/java/Images/informationIcon.png")); // NOI18N
        jToggleButton2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jToggleButton2FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jToggleButton2FocusLost(evt);
            }
        });

        jPanel6.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));

        jTextArea2.setColumns(20);
        jTextArea2.setForeground(new java.awt.Color(51, 102, 255));
        jTextArea2.setRows(5);
        jTextArea2.setText("Install one of the best know platforms for developing\nyour own code and expand your skills!! ");
        jScrollPane11.setViewportView(jTextArea2);

        jPanel6.setVisible(false);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane11, javax.swing.GroupLayout.DEFAULT_SIZE, 348, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane11, javax.swing.GroupLayout.DEFAULT_SIZE, 193, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout supportPanelLayout = new javax.swing.GroupLayout(supportPanel);
        supportPanel.setLayout(supportPanelLayout);
        supportPanelLayout.setHorizontalGroup(
            supportPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(supportPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jToggleButton1)
                .addGroup(supportPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(supportPanelLayout.createSequentialGroup()
                        .addGap(166, 166, 166)
                        .addComponent(jLabel16))
                    .addGroup(supportPanelLayout.createSequentialGroup()
                        .addGap(126, 126, 126)
                        .addGroup(supportPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14)
                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(supportPanelLayout.createSequentialGroup()
                        .addGap(67, 67, 67)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 101, Short.MAX_VALUE)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(supportPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(supportPanelLayout.createSequentialGroup()
                        .addGap(193, 193, 193)
                        .addGroup(supportPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, supportPanelLayout.createSequentialGroup()
                                .addComponent(jLabel18)
                                .addGap(190, 190, 190))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, supportPanelLayout.createSequentialGroup()
                                .addComponent(jLabel19)
                                .addGap(169, 169, 169))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, supportPanelLayout.createSequentialGroup()
                                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(147, 147, 147)
                                .addComponent(jToggleButton2)
                                .addContainerGap())))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, supportPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(63, 63, 63))))
        );
        supportPanelLayout.setVerticalGroup(
            supportPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator3)
            .addGroup(supportPanelLayout.createSequentialGroup()
                .addGroup(supportPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(supportPanelLayout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jLabel17))
                    .addGroup(supportPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jToggleButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, supportPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel16))
                    .addGroup(supportPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jToggleButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(supportPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(supportPanelLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, supportPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(supportPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(supportPanelLayout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(supportPanelLayout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jLabel14)))
                .addGroup(supportPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(supportPanelLayout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(supportPanelLayout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(116, Short.MAX_VALUE))
        );

        supportPanel.setVisible(false);

        mainScreen.add(supportPanel);
        supportPanel.setBounds(180, 60, 1160, 610);

        wallpaper.setIcon(new javax.swing.ImageIcon("/Users/A.Y/Desktop/java-wallpaper-2.jpg")); // NOI18N
        wallpaper.setAutoscrolls(true);
        wallpaper.setMaximumSize(new java.awt.Dimension(1365, 760));
        wallpaper.setMinimumSize(new java.awt.Dimension(1365, 760));
        wallpaper.setPreferredSize(new java.awt.Dimension(1240, 780));
        mainScreen.add(wallpaper);
        wallpaper.setBounds(-1040, -440, 2650, 1180);

        getContentPane().add(mainScreen);
        mainScreen.setBounds(0, 0, 1360, 730);

        pack();
    }// </editor-fold>//GEN-END:initComponents
public final void getAllDucumentInDatabase() throws IOException {

        dbIds = new ArrayList<>();
        dbTitles = new ArrayList<>();
        dbViews = new ArrayList<>();
        dbLikes = new ArrayList<>();
        dbDislikes = new ArrayList<>();
        dbDuration = new ArrayList<>();
        dbVideoYear = new ArrayList<>();
        dbVideoPng = new ArrayList<>();
        dbVideoDescription = new ArrayList<>();

        database = new Database();

        try {

            database.getAllDocuments();

            dbIds = database.getAllIds();
            dbTitles = database.getAllTitles();
            dbViews = database.getAllViews();
            dbLikes = database.getAllLikes();
            dbDislikes = database.getAllDislikes();
            dbDuration = database.getAllDurations();
            dbVideoYear = database.getAllYears();
            dbVideoPng = database.getAllPng();
            dbVideoDescription = database.getAllDescriptions();

        } catch (ClassNotFoundException | SQLException | InstantiationException | IllegalAccessException | IOException ex) {
            Logger.getLogger(UserInterface.class.getName()).log(Level.SEVERE, null, ex);
        }

    }


    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        database = new Database();
        try {

            String check = database.createAccount(name.getText(), surname.getText(), username.getText(), password.getText());

            Status.setText(check);

        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | SQLException ex) {
            Logger.getLogger(UserInterface.class
                    .getName()).log(Level.SEVERE, null, ex);

        }

        name.setText("");
        surname.setText("");
        username.setText("");
        password.setText("");


    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        database = new Database();
        try {

            boolean check = database.logIn(jTextField1.getText(), jTextField2.getText()); // Checks if the account exist

            if (check == true) {

                welcomeScreen.setVisible(false);
                mainScreen.setVisible(true);
                barPanel.setVisible(true);
                jLabel10.setText("Welcome " + jTextField1.getText());

            } else {

                Status2.setText("Invalid details");

            }

        } catch (SQLException | ClassNotFoundException | InstantiationException | IllegalAccessException ex) {
            Logger.getLogger(UserInterface.class
                    .getName()).log(Level.SEVERE, null, ex);
        }

        try {
            loadNewUserMessages();
        } catch (SQLException | ClassNotFoundException | InstantiationException | IllegalAccessException ex) {
            Logger.getLogger(UserInterface.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jCheckBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox1ItemStateChanged

        if (evt.getStateChange() == ItemEvent.SELECTED) {
            //checkbox has been selected
            jLabel1.setVisible(true);
            jComboBox2.setVisible(true);
            jComboBox1.setVisible(true);
            jLabel9.setVisible(true);
            jCheckBox2.setVisible(true);

        } else {
            //checkbox has been deselected
            jLabel1.setVisible(false);
            jComboBox2.setVisible(false);
            jComboBox1.setVisible(false);
            jLabel9.setVisible(false);
            jCheckBox2.setVisible(false);


    }//GEN-LAST:event_jCheckBox1ItemStateChanged
    }
    private void queryFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_queryFocusGained

        query.setText("");

    }//GEN-LAST:event_queryFocusGained

    private void queryFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_queryFocusLost

        query.setText("Search for JAVA content");


    }//GEN-LAST:event_queryFocusLost

    public void SwitchPanels() {

        searchVideoPanel.setVisible(false);
        categoryPanel.setVisible(false);
        searchPanel.setVisible(false);
        quizePanel.setVisible(false);
        chatPanel.setVisible(false);
        urlsScroll.setVisible(false);
        supportPanel.setVisible(false);
        status.setText("");
        QuizCategory.setVisible(false);

    }
    private void communicateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_communicateButtonActionPerformed

        SwitchPanels();
        categoryPanel.setVisible(true);


    }//GEN-LAST:event_communicateButtonActionPerformed

    public JPanel showDiscussions() {

        ArrayList<String> answer = database.getAnswer();
        ArrayList<String> answer_date = database.getAnswerDate();
        ArrayList<String> user_answer = database.getUserAnswer();

        JPanel main = new JPanel();
        main.setLayout(new BoxLayout(main, BoxLayout.Y_AXIS));

        JPanel[] infoPanel = new JPanel[answer.size()];
        JPanel[] textPanel = new JPanel[answer.size()];

        JTextArea[] answerText = new JTextArea[answer.size()];
        JLabel[] date = new JLabel[answer_date.size()];
        JLabel[] user = new JLabel[user_answer.size()];

        for (int i = 0; i < answer.size(); i++) {

            infoPanel[i] = new JPanel(new BorderLayout());
            infoPanel[i].setBackground(Color.BLUE);
            infoPanel[i].setPreferredSize(new Dimension(650, 20));

            textPanel[i] = new JPanel(new BorderLayout());
            textPanel[i].setPreferredSize(new Dimension(650, 150));

            answerText[i] = new JTextArea();
            answerText[i].setLineWrap(true);
            answerText[i].setEditable(false);
            answerText[i].setText(answer.get(i));

            date[i] = new JLabel();
            date[i].setForeground(Color.WHITE);
            date[i].setText("On: " + answer_date.get(i));

            user[i] = new JLabel();
            user[i].setForeground(Color.WHITE);
            user[i].setText("User: " + user_answer.get(i));

            infoPanel[i].add(date[i], BorderLayout.EAST);
            infoPanel[i].add(user[i], BorderLayout.WEST);

            textPanel[i].add(answerText[i]);

            JSeparator seperator = new JSeparator();

            seperator.setForeground(Color.BLUE);

            main.add(infoPanel[i]);
            main.add(textPanel[i]);
            main.add(seperator);

        }

        return main;

    }
    private void question_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_question_buttonActionPerformed

        database = new Database();
        try {

            database.addQuestion(jTextField1.getText(), question_text.getText(), category.getSelectedItem().toString());

        } catch (SQLException | InstantiationException | IllegalAccessException | ClassNotFoundException ex) {
            Logger.getLogger(UserInterface.class
                    .getName()).log(Level.SEVERE, null, ex);
        }
        ChatStatus.setText("Successfully added a question !");
        communicationDisplay();
        question_text.setText(" ");


    }//GEN-LAST:event_question_buttonActionPerformed

    private void answer_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_answer_buttonActionPerformed

        database = new Database();
        try {

            database.addAnswer(index1, jTextField1.getText(), answer_text.getText());
            database.addNotificationUser(jTextField1.getText(), user_for_notification, index1, false);

        } catch (SQLException | ClassNotFoundException | InstantiationException | IllegalAccessException ex) {
            Logger.getLogger(UserInterface.class
                    .getName()).log(Level.SEVERE, null, ex);
        }
        communicationDisplay();
        ChatStatus.setText("Successfully added an answer !");
        answer_text.setText(" ");


    }//GEN-LAST:event_answer_buttonActionPerformed

    private void logOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logOutActionPerformed

        SwitchPanels();

        mainScreen.setVisible(false);
        welcomeScreen.setVisible(true);
        barPanel.setVisible(false);

        jTextField1.setText("");
        jTextField2.setText("");

        name.setText("");
        surname.setText("");
        username.setText("");
        password.setText("");


    }//GEN-LAST:event_logOutActionPerformed

    private void supportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supportActionPerformed

        supportPanel.setVisible(true);

    }//GEN-LAST:event_supportActionPerformed

    private void homeScreenButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeScreenButtonActionPerformed

        SwitchPanels();

    }//GEN-LAST:event_homeScreenButtonActionPerformed

    private void SearchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SearchMouseClicked

        ProgressBar progressBar = new ProgressBar();
        progressBar.progressBar(bar, process, 40);

        new Thread(new Runnable() {
            @Override
            public void run() {

                try {

                    ArrayList<String> years = new ArrayList<>();
                    ArrayList<Integer> views = new ArrayList<>();

                    tester = new LuceneTester();
                    tester.setQuery(query.getText());
                    tester.searchDescs();
                    tester.searchTitles();

                    ArrayList<Integer> result = tester.finalResutls();

                    if (jCheckBox1.isSelected() == false) {

                        videoDisplay(result);
                    }

                    if (jCheckBox1.isSelected() == true) {

                        filtering = new VideoFiltering();

                        for (Integer i : result) {

                            years.add(dbVideoYear.get(i));
                            views.add(dbViews.get(i));

                        }

                        String start = jComboBox1.getModel().getSelectedItem().toString();
                        String end = jComboBox2.getModel().getSelectedItem().toString();

                        ArrayList<Integer> new_result1 = filtering.loadVideosToFiltering(result, years, views, start, end);

                        if (jCheckBox2.isSelected() == false) {

                            videoDisplay(new_result1);
                        } else if (jCheckBox2.isSelected() == true) {

                            ArrayList<Integer> new_result2 = filtering.mostViewVideos();

                            videoDisplay(new_result2);

                        }

                    }

                } catch (IOException | ParseException ex) {
                    Logger.getLogger(UserInterface.class.getName()).log(Level.SEVERE, null, ex);

                }

            }
        }).start();

        createUrlsDisplay();

        javax.swing.SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {

                VideoScrollPane.getVerticalScrollBar().setValue(0);

            }

        });


    }//GEN-LAST:event_SearchMouseClicked

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed

        SwitchPanels();

        searchPanel.setVisible(true);


    }//GEN-LAST:event_jButton4ActionPerformed

    private void openNotificationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openNotificationActionPerformed

        try {
            notficationDisplay();

        } catch (SQLException | ClassNotFoundException | InstantiationException | IllegalAccessException ex) {
            Logger.getLogger(UserInterface.class
                    .getName()).log(Level.SEVERE, null, ex);
        }
        if (openNotification.isSelected()) {

            notificationScroll.setVisible(true);

        } else {

            notificationScroll.setVisible(false);
        }
    }//GEN-LAST:event_openNotificationActionPerformed

    private void quizeButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quizeButton1ActionPerformed
        SwitchPanels();
        QuizCategory.setVisible(true);

    }//GEN-LAST:event_quizeButton1ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed

        SwitchPanels();

        ProgressBar progressBar = new ProgressBar();
        progressBar.progressBar(bar, process, 0);

        communicationDisplay();
        categoryPanel.setVisible(false);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jLabel18MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel18MouseClicked
        Desktop desktop = Desktop.isDesktopSupported() ? Desktop.getDesktop() : null;
        if (desktop != null && desktop.isSupported(Desktop.Action.BROWSE)) {
            try {
                URI uri = new URI("https://www.ntu.edu.sg/home/ehchua/programming/howto/NetBeans_HowTo.html");
                desktop.browse(uri);
            } catch (URISyntaxException | IOException e) {
            }
        }

    }//GEN-LAST:event_jLabel18MouseClicked

    private void jLabel19MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel19MouseClicked
        Desktop desktop = Desktop.isDesktopSupported() ? Desktop.getDesktop() : null;
        if (desktop != null && desktop.isSupported(Desktop.Action.BROWSE)) {
            try {
                URI uri = new URI("http://www3.ntu.edu.sg/home/ehchua/programming/howto/eclipsejava_howto.html");
                desktop.browse(uri);
            } catch (URISyntaxException | IOException e) {
            }
        }
    }//GEN-LAST:event_jLabel19MouseClicked

    private void jLabel14MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel14MouseClicked

        Desktop desktop = Desktop.isDesktopSupported() ? Desktop.getDesktop() : null;
        if (desktop != null && desktop.isSupported(Desktop.Action.BROWSE)) {
            try {
                URI uri = new URI("http://stackoverflow.com/");
                desktop.browse(uri);
            } catch (URISyntaxException | IOException e) {
            }
        }
    }//GEN-LAST:event_jLabel14MouseClicked

    private void jLabel15MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel15MouseClicked

        Desktop desktop = Desktop.isDesktopSupported() ? Desktop.getDesktop() : null;
        if (desktop != null && desktop.isSupported(Desktop.Action.BROWSE)) {
            try {
                URI uri = new URI("https://github.com/");
                desktop.browse(uri);
            } catch (URISyntaxException | IOException e) {
            }
        }
    }//GEN-LAST:event_jLabel15MouseClicked

    private void jToggleButton1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jToggleButton1FocusGained
        jPanel3.setVisible(true);
    }//GEN-LAST:event_jToggleButton1FocusGained

    private void jToggleButton1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jToggleButton1FocusLost
        jPanel3.setVisible(false);
    }//GEN-LAST:event_jToggleButton1FocusLost

    private void jToggleButton2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jToggleButton2FocusGained
        jPanel6.setVisible(true);
    }//GEN-LAST:event_jToggleButton2FocusGained

    private void jToggleButton2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jToggleButton2FocusLost
        jPanel6.setVisible(false);
    }//GEN-LAST:event_jToggleButton2FocusLost

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed

        ProgressBar progressBar = new ProgressBar();
        progressBar.progressBar(bar, process, 0);

        QuizCategory.setVisible(false);

        database = new Database();
        jButton3.setVisible(true);

        ArrayList<String> questions = new ArrayList<>();
        ArrayList<String> answers = new ArrayList<>();

        final ArrayList<String> answers1 = new ArrayList<>();

        try {

            String topic = jComboBox3.getModel().getSelectedItem().toString();

            database.Quize(topic);

            questions = database.getQuizeQuestions();
            answers = database.getQuizeAnswers();

        } catch (ClassNotFoundException | SQLException | InstantiationException | IllegalAccessException ex) {
            Logger.getLogger(UserInterface.class
                    .getName()).log(Level.SEVERE, null, ex);
        }

        JPanel mainPanel = new JPanel();
        mainPanel.setLayout(new BoxLayout(mainPanel, BoxLayout.Y_AXIS));

        JLabel label;

        final JTextField[] user_answer = new JTextField[answers.size()];

        JTextArea text;
        JPanel forAnswerPanel;

        for (int i = 0; i < questions.size(); i++) {

            label = new JLabel("Add your answer: ");
            label.setForeground(Color.BLUE);

            forAnswerPanel = new JPanel();

            forAnswerPanel.setLayout(new BoxLayout(forAnswerPanel, BoxLayout.X_AXIS));

            user_answer[i] = new JTextField();

            text = new JTextArea();
            text.setEditable(false);
            text.setText(questions.get(i));

            JSeparator seperator = new JSeparator();

            forAnswerPanel.add(label);
            forAnswerPanel.add(user_answer[i]);

            seperator.setForeground(Color.BLUE);
            mainPanel.add(text);
            mainPanel.add(forAnswerPanel);
            mainPanel.add(seperator);

        }

        jScrollPane6.revalidate();
        jScrollPane6.repaint();
        jScrollPane6.getVerticalScrollBar().setUnitIncrement(10);
        jScrollPane6.setViewportView(mainPanel);

        quizePanel.setVisible(true);

        javax.swing.SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {

                jScrollPane6.getVerticalScrollBar().setValue(0);
                jScrollPane6.setVisible(true);

            }

        });

        for (String b : answers) {

            answers1.add(b);

        }

        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {

            @Override
            public void mouseClicked(java.awt.event.MouseEvent evt) {

                int score = 0;

                for (int i = 0; i < answers1.size(); i++) {

                    if (answers1.get(i).equals(user_answer[i].getText())) {

                        score = score + 10;

                    } else {

                        score = score + 0;

                    }

                }

                int result = score / answers1.size();

                status.setText("You scored: " + result + "0");

                quizePanel.setVisible(false);

            }

        }
        );


    }//GEN-LAST:event_jButton6ActionPerformed

    public void loadNewUserMessages() throws SQLException, ClassNotFoundException, InstantiationException, IllegalAccessException {

        database = new Database();
        database.getUserNotification(jTextField1.getText());
        int messages = 0;
        ArrayList<Boolean> condition = database.getMessageCondition();

        for (int i = 0; i < condition.size(); i++) {

            if (condition.get(i) == false) {

                messages += 1;

            }
        }

        newMessages.setText(messages + " new messages");
    }

    public void createUrlsDisplay() {

        cs = new CustomSearch();

        try {
            cs.findUlrs("java" + query.getText().replaceAll("\\s+", ""));

        } catch (IOException ex) {
            Logger.getLogger(UserInterface.class
                    .getName()).log(Level.SEVERE, null, ex);
        }

        urls = cs.getUrlsFound();

        /*for creating scollpane for tutorial video urls*/
        JLabel[] texts = new JLabel[urls.size()];

        JPanel panel = new JPanel();
        panel.setForeground(Color.WHITE);

        if (urls.isEmpty()) {

            JLabel label = new JLabel();

            label.setText("No websites found for your query, please try again !!");
            panel.add(label);

        } else {

            for (int i = 0; i < urls.size(); i++) {

                panel.setLayout(new BoxLayout(panel, BoxLayout.Y_AXIS));
                panel.add(Box.createVerticalStrut(15));

                texts[i] = new JLabel();
                texts[i].setForeground(Color.BLUE);
                texts[i].setSize(20, 80);
                texts[i].setText("<html><u>" + urls.get(i) + "</u></html>");

                final String url = urls.get(i);
                texts[i].addMouseListener(new java.awt.event.MouseAdapter() {
                    @Override
                    public void mouseClicked(java.awt.event.MouseEvent evt) {
                        URI uri = null;

                        if (Desktop.isDesktopSupported()) {
                            try {
                                uri = new URI(url);
                                Desktop.getDesktop().browse(uri);

                            } catch (IOException ioe) {
                                System.out.println("The system cannot find the " + uri + " file specified");

                            } catch (URISyntaxException ex) {
                                Logger.getLogger(UserInterface.class
                                        .getName()).log(Level.SEVERE, null, ex);
                            }

                        }

                    }
                });

                panel.add(texts[i]);

            }
        }
        urlsScroll.setViewportView(panel);
        urlsScroll.setVisible(true);

    }

    public void videoDisplay(ArrayList<Integer> index) {

        /* for creating a panel and add videos based on user queary (Search) */
        final JPanel mainPanel = new JPanel();
        mainPanel.setLayout(new BoxLayout(mainPanel, BoxLayout.Y_AXIS));

        JLabel[] png = new JLabel[index.size()]; // arrays for adding video png images
        JTextArea[] infos = new JTextArea[index.size()]; //array textArea for adding video ratings 
        JPanel[] panels = new JPanel[index.size()]; //array panels for add individual video information
        JTextArea[] videoDesc = new JTextArea[index.size()];
        JScrollPane[] scrollText = new JScrollPane[index.size()];

        for (int a = 0; a < index.size(); a++) {

            panels[a] = new JPanel();
            panels[a].setToolTipText("Click the icon to watch the video !");

            infos[a] = new JTextArea();
            infos[a].setText("\n\n\n\n\nTitle: " + dbTitles.get(index.get(a) - 1) + "\nYear: " + dbVideoYear.get(index.get(a) - 1) + "\nDuration: " + dbDuration.get(index.get(a) - 1)
                    + "\nViews: " + dbViews.get(index.get(a) - 1).toString() + "\nLikes: " + dbLikes.get(index.get(a) - 1).toString() + "\nDislikes: " + dbDislikes.get(index.get(a) - 1).toString());
            infos[a].setEditable(false);
            infos[a].setFont(new java.awt.Font("Lucida Grande", 1, 12));
            infos[a].setLineWrap(true);
            infos[a].setWrapStyleWord(true);

            videoDesc[a] = new JTextArea(15, 25);
            videoDesc[a].setText(dbVideoDescription.get(index.get(a) - 1));

            videoDesc[a].setEditable(false);
            videoDesc[a].setLineWrap(true);// enable line wrap to wrap text around
            videoDesc[a].setWrapStyleWord(true); // words will not be cut off when wrapped around

            scrollText[a] = new JScrollPane(videoDesc[a]);
            scrollText[a].setBorder(javax.swing.BorderFactory.createTitledBorder("Description"));
            scrollText[a].setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);
            scrollText[a].setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_NEVER);
            scrollText[a].setWheelScrollingEnabled(true);

            scrollText[a].setViewportView(videoDesc[a]);

            png[a] = new JLabel();

            /*using each http icon and adding it as an icon in a label */
            final String icons = dbVideoPng.get(index.get(a) - 1);
            png[a].setIcon(new javax.swing.JLabel() {
                @Override
                public javax.swing.Icon getIcon() {
                    try {
                        return new javax.swing.ImageIcon(
                                new java.net.URL(icons)
                        );
                    } catch (java.net.MalformedURLException e) {
                    }
                    return null;
                }
            }.getIcon());

            /* using each video id and creates a MouseListener (mouseClecked) to open the browser and show the video */
            final String url = dbIds.get(index.get(a) - 1);
            panels[a].addMouseListener(new java.awt.event.MouseAdapter() {
                @Override
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    URI uri = null;

                    if (Desktop.isDesktopSupported()) {
                        try {
                            uri = new URI("https://www.youtube.com/watch?v=" + url);
                            Desktop.getDesktop().browse(uri);

                        } catch (IOException ioe) {
                            System.out.println("The system cannot find the " + uri + " file specified");

                        } catch (URISyntaxException ex) {
                            Logger.getLogger(UserInterface.class
                                    .getName()).log(Level.SEVERE, null, ex);
                        }

                    }

                }
            });

            JSeparator seperator = new JSeparator();
            seperator.setForeground(Color.BLUE);

            int videoNu = a + 1;
            String videoNumber = Integer.toString(videoNu);

            panels[a].setBorder(javax.swing.BorderFactory.createTitledBorder("Video " + videoNumber));
            panels[a].setBackground(Color.WHITE);
            panels[a].setLayout(new BoxLayout(panels[a], BoxLayout.LINE_AXIS)); //set the layout of this each panel in vertical position

            panels[a].add(png[a]);
            panels[a].add(new JSeparator(SwingConstants.VERTICAL));
            panels[a].add(infos[a]);
            panels[a].add(new JSeparator(SwingConstants.VERTICAL));
            panels[a].add(scrollText[a]);

            /*adding each video content to the main panel */
            mainPanel.add(panels[a]);
            mainPanel.add(seperator);

        }

        //screenStatus.append(index.size() + " videos found.\n");
        VideoScrollPane.getVerticalScrollBar().setUnitIncrement(10);

        VideoScrollPane.setViewportView(mainPanel);
        searchVideoPanel.setVisible(true);

        status.setText(index.size() + " videos found for " + query.getText());

    }

    public void communicationDisplay() {

        SwitchPanels();

        ArrayList<Integer> id = new ArrayList<>();
        ArrayList<String> questions = new ArrayList<>();
        ArrayList<String> user = new ArrayList<>();
        ArrayList<String> date = new ArrayList<>();

        try {

            database = new Database();
            database.loadQuestions(category.getSelectedItem().toString());  //Calling the Object to load questions from users

            //parse the inforamtion to multiple ArrayLists to demonstrate them.
            id = database.getQuestionId();
            questions = database.getQuestions();
            user = database.getUser();
            date = database.getDate();

        } catch (SQLException | ClassNotFoundException | InstantiationException | IllegalAccessException ex) {
            Logger.getLogger(UserInterface.class
                    .getName()).log(Level.SEVERE, null, ex);
        }

        final JPanel mainPanel = new JPanel(); // main panel for questions

        mainPanel.setLayout(new BoxLayout(mainPanel, BoxLayout.Y_AXIS));
        mainPanel.add(Box.createVerticalStrut(8));

        JButton[] button = new JButton[id.size()]; //to press and show answers
        final JPanel[] infoPanel = new JPanel[questions.size()]; //displays the user and date added
        JTextArea[] user_question = new JTextArea[questions.size()]; //displays user question
        JLabel[] user_name = new JLabel[user.size()]; //username
        JLabel[] date_added = new JLabel[date.size()]; //date added from user
        final JPanel[] questionPanel = new JPanel[questions.size()];

        for (int i = 0; i < questions.size(); i++) {

            button[i] = new JButton("Join Discussion");

            infoPanel[i] = new JPanel();
            infoPanel[i].setBackground(Color.BLUE);
            infoPanel[i].setLayout(new BorderLayout());
            infoPanel[i].setPreferredSize(new Dimension(650, 20));

            questionPanel[i] = new JPanel();
            questionPanel[i].setPreferredSize(new Dimension(650, 150));

            user_name[i] = new JLabel();
            user_name[i].setForeground(Color.WHITE);
            user_name[i].setText("User: " + user.get(i));

            date_added[i] = new JLabel();
            date_added[i].setForeground(Color.WHITE);
            date_added[i].setText("On: " + date.get(i));

            user_question[i] = new JTextArea();
            user_question[i].setLineWrap(true);
            user_question[i].setEditable(false);
            user_question[i].setText(questions.get(i));

            //adding information (username and date added) to mutliple panels
            infoPanel[i].add(user_name[i], BorderLayout.WEST);
            infoPanel[i].add(date_added[i], BorderLayout.EAST);

            //adding each user question and button 
            questionPanel[i].setLayout(new BoxLayout(questionPanel[i], BoxLayout.X_AXIS));
            questionPanel[i].add(user_question[i]);
            questionPanel[i].add(button[i]);

            JSeparator line = new JSeparator();
            line.setForeground(Color.BLUE);

            //adds the above panels into the main panel
            mainPanel.add(infoPanel[i]);
            mainPanel.add(questionPanel[i]);
            mainPanel.add(line);

            /*Gets the current id_question and using it to load answers of 
             the current question if the button is pressed*/
            final int index = id.get(i);
            final String user_added = user.get(i);
            final String view_question = questions.get(i);
            button[i].addMouseListener(new java.awt.event.MouseAdapter() {
                @Override
                public void mouseClicked(java.awt.event.MouseEvent evt) {

                    question_button.setVisible(false);
                    question_text.setVisible(false);

                    answer_button.setVisible(true);
                    answer_text.setVisible(true);

                    questionView.setText(view_question);

                    jPanel5.setVisible(true);

                    try {

                        database = new Database(); // calls the Class

                        database.Discussions(index); // using the method to retrieve relevant answers

                        jScrollPane3.revalidate();
                        jScrollPane3.repaint();
                        jScrollPane3.setViewportView(showDiscussions());

                        index1 = index; // parse the index to use it if an asnwer is added
                        user_for_notification = user_added;

                    } catch (SQLException | ClassNotFoundException | InstantiationException | IllegalAccessException ex) {
                        Logger.getLogger(UserInterface.class
                                .getName()).log(Level.SEVERE, null, ex);

                    }

                }
            });

        }

        //to display the panel in GUI from scrollPane
        jScrollPane3.setViewportView(mainPanel);

        /*Back button to return to questions Panel*/
        back_button.addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
            public void mouseClicked(java.awt.event.MouseEvent evt) {

                jPanel5.setVisible(false);
                question_button.setVisible(true);
                question_text.setVisible(true);

                answer_button.setVisible(false);
                answer_text.setVisible(false);

                jScrollPane3.revalidate();
                jScrollPane3.repaint();
                jScrollPane3.setViewportView(mainPanel);

                answer_text.setText(" ");
                question_text.setText(" ");

            }
        }
        );

        javax.swing.SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {

                chatPanel.setVisible(true);
                jScrollPane3.getVerticalScrollBar().setValue(0);

            }

        });

    }

    public void notficationDisplay() throws SQLException, ClassNotFoundException, InstantiationException, IllegalAccessException {

        database = new Database();
        database.getUserNotification(jTextField1.getText());

        ArrayList<String> sender = database.getMessageSender();
        ArrayList<Integer> position = database.getMessagePosition();
        ArrayList<Integer> messageId = database.getMessageId();
        ArrayList<Boolean> condition = database.getMessageCondition();

        Collections.reverse(sender);
        Collections.reverse(position);
        Collections.reverse(messageId);
        Collections.reverse(condition);

        JPanel panel = new JPanel();
        panel.setLayout(new BoxLayout(panel, BoxLayout.Y_AXIS));
        JTextField[] field = new JTextField[sender.size()];

        for (int i = 0; i < sender.size(); i++) {

            field[i] = new JTextField();
            field[i].setEditable(false);
            field[i].setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
            field[i].setText("From: " + sender.get(i));

            if (condition.get(i) == false) {

                field[i].setBackground(Color.GRAY);

            } else {
                field[i].setBackground(Color.WHITE);
            }

            final int idMessage = messageId.get(i);
            final int index = position.get(i);
            field[i].addMouseListener(new java.awt.event.MouseAdapter() {
                @Override
                public void mouseClicked(java.awt.event.MouseEvent evt) {

                    try {

                        database.Discussions(index);
                        database.updatedNotificationStatus(idMessage);
                        jScrollPane3.revalidate();
                        jScrollPane3.repaint();
                        jScrollPane3.setViewportView(showDiscussions());
                        chatPanel.setVisible(true);
                        loadNewUserMessages();

                    } catch (SQLException | ClassNotFoundException | InstantiationException | IllegalAccessException ex) {
                        Logger.getLogger(UserInterface.class
                                .getName()).log(Level.SEVERE, null, ex);
                    }

                }
            });

            JSeparator seperator = new JSeparator();

            seperator.setForeground(Color.BLUE);

            panel.add(field[i]);
            panel.add(seperator);
        }

        notificationScroll.setViewportView(panel);

    }

    /**
     * @param args the command line arguments
     * @throws java.lang.InterruptedException
     */
    public static void main(String args[]) throws InterruptedException {

        /* Create and iconplay the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {

                try {

                    UserInterface uI = new UserInterface();

                    uI.setLocationRelativeTo(null);
                    uI.setVisible(true);

                } catch (IOException | SQLException | ClassNotFoundException | InstantiationException | IllegalAccessException ex) {
                    Logger.getLogger(UserInterface.class
                            .getName()).log(Level.SEVERE, null, ex);
                }

            }
        });

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane Access_Create;
    private javax.swing.JTextField ChatStatus;
    private javax.swing.JPanel QuizCategory;
    private javax.swing.JLabel Search;
    private javax.swing.JLabel Status;
    private javax.swing.JLabel Status2;
    private final javax.swing.JScrollPane VideoScrollPane = new javax.swing.JScrollPane();
    private javax.swing.JButton answer_button;
    private javax.swing.JTextArea answer_text;
    private javax.swing.JButton back_button;
    private javax.swing.JProgressBar bar;
    private javax.swing.JPanel barPanel;
    private javax.swing.JComboBox category;
    private javax.swing.JPanel categoryPanel;
    private javax.swing.JPanel chatPanel;
    private javax.swing.JButton communicateButton;
    private javax.swing.JButton homeScreenButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JComboBox jComboBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JPasswordField jTextField2;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JToggleButton jToggleButton2;
    private javax.swing.JPanel logIN;
    private javax.swing.JButton logOut;
    private javax.swing.JPanel mainScreen;
    private javax.swing.JTextField name;
    private javax.swing.JPanel newAccountPanel;
    private javax.swing.JLabel newMessages;
    private javax.swing.JScrollPane notificationScroll;
    private javax.swing.JToggleButton openNotification;
    private javax.swing.JPasswordField password;
    private javax.swing.JLabel process;
    private javax.swing.JTextField query;
    private javax.swing.JTextArea questionView;
    private javax.swing.JButton question_button;
    private javax.swing.JTextArea question_text;
    private javax.swing.JButton quizeButton1;
    private javax.swing.JPanel quizePanel;
    private javax.swing.JPanel searchPanel;
    private javax.swing.JTabbedPane searchVideoPanel;
    private javax.swing.JLabel status;
    private javax.swing.JButton support;
    private javax.swing.JPanel supportPanel;
    private javax.swing.JTextField surname;
    private javax.swing.JScrollPane urlsScroll;
    private javax.swing.JTextField username;
    private javax.swing.JLabel wallpaper;
    private javax.swing.JPanel welcomeScreen;
    // End of variables declaration//GEN-END:variables

}
